{"version":3,"sources":["assets/eye.svg","assets/eye-slash.svg","components/ValidatedLoginForm.js","assets/engie.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["ValidatedLoginForm","useState","passwordShown","setPasswordShown","togglePasswordVisiblity","initialValues","email","password","onSubmit","values","setSubmitting","console","log","validationSchema","Yup","shape","required","matches","props","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","className","htmlFor","name","type","placeholder","value","onChange","onBlur","style","marginBottom","backgroundColor","onClick","src","ShowIcon","ShowOffIcon","disabled","Header","logo","alt","App","maxWidth","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQAAe,MAA0B,gCCA1B,MAA0B,sC,gBCwG1BA,EAhGY,WACzB,MAA0CC,oBAAS,GAAnD,mBAAOC,EAAP,KAAsBC,EAAtB,KACMC,EAA0B,WAC9BD,GAAiBD,IAEnB,OACE,cAAC,IAAD,CACAG,cAAe,CAACC,MAAM,GAAGC,SAAS,IAClCC,SAAU,SAACC,EAAD,GAA4B,EAAnBC,cACfC,QAAQC,IAAI,WAEhBC,iBAAkBC,MAAaC,MAAM,CACjCT,MAAOQ,MACJR,MAAM,oBACNU,SAAS,6BACZT,SAAUO,MACPE,SAAS,2BACTC,QAAQ,iEAAkE,sCAXjF,SAeC,SAAAC,GAEC,IACET,EAOES,EAPFT,OACAU,EAMED,EANFC,QACAC,EAKEF,EALFE,OACAC,EAIEH,EAJFG,aACAC,EAGEJ,EAHFI,aACAC,EAEEL,EAFFK,WACAC,EACEN,EADFM,aAEF,OAEE,uBAAM,cAAY,OAAOhB,SAAUgB,EAAnC,UACE,uBACA,cAAY,aACZC,UAAU,SAASC,QAAQ,QAF3B,2BAGA,mCACEC,KAAK,QACLC,KAAK,OACL,cAAY,aACZC,YAAY,6BACZC,MAAOrB,EAAOH,MACdyB,SAAUT,EACVU,OAAQT,EACRE,UAAWL,EAAOd,OAASa,EAAQb,OAAS,SAR9C,YASY,UAEXc,EAAOd,OAASa,EAAQb,OACvB,qBACA,cAAY,gBACZmB,UAAU,iBAFV,SAE4BL,EAAOd,QAErC,uBACA,cAAY,gBACZmB,UAAU,SAASC,QAAQ,WAF3B,0BAGA,sBAAKD,UAAU,cAAf,UACA,mCACEE,KAAK,WACL,cAAY,gBACZC,KAAM1B,EAAgB,OAAS,WAC/B2B,YAAY,4BACZC,MAAOrB,EAAOF,SACdwB,SAAUT,EACVU,OAAQT,EACRE,UAAWL,EAAOb,UAAYY,EAAQZ,UAAY,SARpD,YASY,iBAEZ,wBACE,cAAY,YACZkB,UAAU,+BAA+BQ,MAAO,CAACC,aAAa,OAAOC,gBAAgB,WACrFC,QAAShC,EAHX,SAKeF,EAAgB,qBAAKmC,IAAKC,IAAa,qBAAKD,IAAKE,SAG/DnB,EAAOb,UAAYY,EAAQZ,UAC1B,qBACA,cAAY,mBACZkB,UAAU,iBAFV,SAE4BL,EAAOb,WAErC,wBACA,cAAY,cACZkB,UAAU,iBAAiBG,KAAK,SAASY,SAAUnB,EAFnD,0BC1FK,G,cAAA,IAA0B,mCCO1BoB,EALA,kBACb,qBAAK,cAAY,YAAYhB,UAAU,SAAvC,SACE,qBAAK,cAAY,YAAYY,IAAKK,EAAMC,IAAI,aCcjCC,MAff,WACE,OACE,sBAAKnB,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,8CAAf,SACE,qBAAKA,UAAU,2BAA2BQ,MAAO,CAAEY,SAAU,QAASC,eAAgB,UAAtF,SACE,qBAAKrB,UAAU,gBAAf,SACE,cAAC,EAAD,cCEGsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.02b2979d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eye.3d78e88c.svg\";","export default __webpack_public_path__ + \"static/media/eye-slash.3e38b239.svg\";","import React,{useState} from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport ShowIcon from '../assets/eye.svg';\r\nimport ShowOffIcon from '../assets/eye-slash.svg';\r\nimport './ValidatedLoginForm.css';\r\n\r\n\r\nconst ValidatedLoginForm = () => {\r\n  const [passwordShown, setPasswordShown] = useState(false);\r\n  const togglePasswordVisiblity = () => {\r\n    setPasswordShown(passwordShown ? false : true);\r\n  }\r\n  return(\r\n    <Formik\r\n    initialValues={{email:\"\",password:\"\"}}\r\n    onSubmit={(values,{setSubmitting}) => {\r\n        console.log(\"Loging\");\r\n    }}\r\n    validationSchema={Yup.object().shape({\r\n        email: Yup.string()\r\n          .email(\"Email non valide\")\r\n          .required(\"Entrez une adresse email.\"),\r\n        password: Yup.string()\r\n          .required(\"Entrez un mot de passe.\")\r\n          .matches(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})/, \"Mot de passe non sécurisé.\")\r\n      })}\r\n    >\r\n\r\n    {props => {\r\n\r\n      const {\r\n        values,\r\n        touched,\r\n        errors,\r\n        isSubmitting,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit\r\n      } = props;\r\n      return (\r\n\r\n        <form data-testid=\"Form\" onSubmit={handleSubmit}>\r\n          <label \r\n          data-testid=\"LabelEmail\"\r\n          className=\"labels\" htmlFor=\"email\">Adresse Email</label>\r\n          <input\r\n            name=\"email\"\r\n            type=\"text\"\r\n            data-testid=\"InputEmail\"\r\n            placeholder=\"Entrez votre adresse email\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.email && touched.email && \"error\"}\r\n            className=\"focus\"\r\n          />\r\n          {errors.email && touched.email && (\r\n            <div \r\n            data-testid=\"FeedBackEmail\"\r\n            className=\"input-feedback\">{errors.email}</div>\r\n          )}\r\n          <label \r\n          data-testid=\"LabelPassword\"\r\n          className=\"labels\" htmlFor=\"password\">Mot de passe</label>\r\n          <div className=\"input-group\">\r\n          <input\r\n            name=\"password\"\r\n            data-testid=\"Inputpassword\"\r\n            type={passwordShown ? \"text\" : \"password\"}\r\n            placeholder=\"Entrez votre mot de passe\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            className={errors.password && touched.password && \"error\"}\r\n            className=\"focus col-10\"\r\n          />\r\n          <button \r\n            data-testid=\"ButtonEye\"\r\n            className=\"buttonPad col-2 mobile-space\" style={{marginBottom:\"20px\",backgroundColor:\"#ffffff\"}}\r\n            onClick={togglePasswordVisiblity}\r\n          >\r\n                        {passwordShown ? <img src={ShowIcon}/> :<img src={ShowOffIcon}/>}\r\n          </button>\r\n          </div>\r\n          {errors.password && touched.password && (\r\n            <div \r\n            data-testid=\"FeedBackPassword\"\r\n            className=\"input-feedback\">{errors.password}</div>\r\n          )}\r\n          <button \r\n          data-testid=\"ButtonLogin\"\r\n          className=\"col-12 buttons\" type=\"submit\" disabled={isSubmitting}>\r\n            Login\r\n          </button>\r\n    \r\n        </form>\r\n      );\r\n    }}\r\n  </Formik>\r\n  );\r\n\r\n};\r\n\r\nexport default ValidatedLoginForm;","export default __webpack_public_path__ + \"static/media/engie.2bda23b6.svg\";","import './Header.css';\r\nimport logo from '../assets/engie.svg';\r\nconst Header = () => (\r\n  <div data-testid=\"DivHeader\" className=\"header\">\r\n    <img data-testid=\"logoImage\" src={logo} alt=\"Engie\" />\r\n  </div>\r\n)\r\nexport default Header;","import ValidatedLoginForm from \"./components/ValidatedLoginForm\";\nimport \"./styles.css\";\nimport Header from \"./components/Header\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header/>\n      <div className=\"container p-4 d-flex justify-content-center\">\n        <div className=\"card mx-3 shadow-lg mt-3\" style={{ maxWidth: \"400px\", justifyContent: \"center\" }}>\n          <div className=\"card-body p-5\">\n            <ValidatedLoginForm />\n          </div>\n        </div>\n      </div>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}